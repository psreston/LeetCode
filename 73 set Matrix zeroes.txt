//Given a m x n matrix, if an element is 0, set its entire row and column to// 0. Do it in place.

//click to show follow up.

//Follow up:
//Did you use extra space?
//A straight forward solution using O(mn) space is probably a bad idea.
//A simple improvement uses O(m + n) space, but still not the best solution.
//Could you devise a constant space solution?

public class Solution {
    public void setZeroes(int[][] matrix) {
        boolean setfirstrow = false;
        boolean setfirstcol = false;
        
        int n = matrix.length;
        int m = matrix[0].length;
        for(int i = 0;i<n;i++){
            if(matrix[i][0]==0){
                setfirstcol = true;
                break;
            }
        }
        for(int j = 0 ;j<m;j++){
            if(matrix[0][j]==0){
                setfirstrow = true;
                break;
            }
        }
        
        for(int i =1 ;i<n;i++){
            for(int j = 1; j<m;j++){
                if(matrix[i][j]==0){
                    matrix[0][j]=0;
                    matrix[i][0]=0;
                }
            }
        }
        
        for(int i = 1;i<n;i++){
            if(matrix[i][0]==0){
                for(int j =1 ;j<m;j++){
                    matrix[i][j]=0;
                }
            }
        }
        
        for(int j = 1;j<m;j++){
            if(matrix[0][j]==0){
                for(int i = 1 ;i<n;i++){
                    matrix[i][j]=0;
                }
            }
        }
        
        if(setfirstcol){
            for(int i = 0;i<n;i++){
                matrix[i][0]=0;
            }
        }
        
        if(setfirstrow){
            for(int j = 0;j<m;j++){
                matrix[0][j]=0;
            }
        }
    }
}
